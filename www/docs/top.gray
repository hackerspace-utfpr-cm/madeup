[let skin=madeupdocs]
[let root=.]
[style id=screenshot
width: 100%
background-color: white
margin-top: 0.5em
margin-bottom: 0.5em
]

# Revolving

In this lesson, we're going to make a spinning top using the `revolve` solidifier. Let's see the core ideas first with a box, and then you can take those ideas and build your own little merry-go-round for bugs.

## Box

Consider this path, coded in Madeup:

[image src=docs/html/images/box_cross.png style=screenshot]

What commands do you suppose were used to trace it?

Before reading on, recreate this path with a Madeup program that you write. I suggest that you follow these steps:

1. Draw the path on graph paper, following the lines of the grid. Draw directly on the lines, not in the empty space between lines.
1. Number the vertical lines of the grid, with the left-most that you drew on labeled 0. The one to its right is 1, and then 2, and then 3, and so on.
1. Number the horizontal lines, with the bottom-most that you drew on labeled 0. The one above it is 1, and then 2, and then 3, and so on.
1. Using the numbered lines, determine the x- and y-coordinates of each black dot---or *vertex*---and write the coordinates next to each dot. [hide title="When you've got something, compare your solution to our example."
[image src=docs/html/images/box_cross_labeled.png style=screenshot]
Our numbers may be different. That's okay.
]
1. In Madeup, craft a sequence of `moveto` commands using those coordinate pairs. [hide title="Only peek at our solution if you get stuck."
[mup
moveto 0, 0
moveto 5, 0
moveto 5, 5
moveto 5, 4
moveto 1, 1
moveto 0, 1
] Again, our numbers may be different, but the overall structure should be the same.
]

Now let's consider the vertical line you labeled 0. This line is called the *y-axis*. Here it is in green:

[image src=docs/html/images/box_cross_y.png style=screenshot]

What would happen if we spun the path around this y-axis?

This would happen:

[image src=docs/html/images/box_cross_revolved_10.png style=screenshot]

I didn't spin very much. Only 10 degrees. I used the `revolve` command to do it:

[mup
revolve 0, 1, 0, 10
]

What do those numbers after `revolve` mean? Revolving needs two pieces of information from us in order to do its job:

- Which line or axis we want to spin around. The axis is represented by the first three numbers, which are x-, y-, and z-coordinates. (0, 1, 0) means the y-axis, as only the y-coordinate isn't 0.
- How many degrees we want to spin. Here we spin 10 degrees.

Add the `revolve` command after all of your `moveto` commands. Does it solidify?

Let's see what happens when we gradually increase the number of degrees:

[image src=docs/html/images/revolve_cube_200ms_patrol.gif style=screenshot]

That's revolution. It's what Earth does around the sun. Who knew boxes could be made by spinning?

When the walls close up at the end, how many degrees have we spun?

If you've got a box, let's keep going. If not, check your work, talk to your classmates, or give it a break while your mind tries to figure out what went wrong.

## Top

Your task is to design a top. As with the box, start by drawing the *cross section* on graph paper. There is no right or wrong answer for what this should look like. But to make sure we can print your top on our printers, aim for something with this overall shape:

[image src=docs/html/images/top_cross.png style=screenshot]

Our printers can't print objects that aren't well-supported. A top is a prime example of an object that is not well-supported. They tend to fall over, right? What makes them magic is when they don't.

To print this, we'll turn it upside down. It's extremely important that the stem be at the same height as the outermost brim. That way both of these surfaces touch the printer's build platform and support the rest of the object.

Once you've got the cross section on graph paper, find the xy-coordinates for each vertex and code up the path with `moveto` commands. Add your `revolve` around the y-axis. How does it look?

When you revolve it, you'll find that it's pretty square. To make the revolution more circular, add the following at the very start of your program, before any `moveto` commands:

[mup
nsides = 5
]

Bump the number up until your top is satisfyingly round.
