* {
  box-sizing: border-box;
}

html {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

body {
  height: 100%;
  width: 100%;
  overflow: hidden;
  padding: 0;
  margin: 0;
}

.unselectable {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
  user-drag: none;
  -webkit-touch-callout: none;
}

#tools {
  float: left;
  width: 300px;
}

#entire {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  /* background: #00FF00; */
}

#left {
  float: left;
  padding: 0;
  width: 420px;
  height: 100%;
  z-index: 0;
}

#glcanvas canvas {
  margin: 0;
  padding: 0;
  border: none;
  display: block;
  overflow: hidden;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
  user-drag: none;
  -webkit-touch-callout: none;
}

#glcanvas {
  /* Block display and hidden overflow are needed to keep the canvas from
  wrapping below the floated editor to its left. This can happen when their
  widths sum greater than the window --- which can happen when the window has a
  fractional width because of zooming or some other craziness. */
  display: block;
  overflow: hidden;

  /* Non-static positioning is needed to anchor the toolbar overlay. */
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;

  margin: 0;
  padding: 0;
  border: none;
}

#info3 {
  position: absolute;
  right: 5px;
  bottom: 5px;
  font-family: monospace;
  white-space: pre-line;
}

#textEditor { 
  margin: 0px;
  height: 300px;
  z-index: 1;
}

#blocksEditor {
  display: none;
  margin: 0px;
}

#blocksCanvas { 
  position: absolute;
}

#console {
  font-family: 'Courier', 'Courier New', monospace;
  outline: none;
  height: 50px;
  overflow: auto;
  z-index: 1000;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

#message {
  overflow: auto;
  height: 100%;
  width: 100%;
}

/* Fattens the handle for resizing the console. Needed because the textEditor seems 
   to snarf up its size of the boundary. */
#console > .ui-resizable-n {
  top: 0;
  height: 5px;
}

.srclink:link {
}

.srclink:visited {
}

.srclink:hover {
}

.srclink:active {
}

#downloader {
  position: fixed;
  top: 600px;
  left: 0px;
  width: 420px;
}

audio::-webkit-media-controls-enclosure {
  max-width: 100%;
}

#keystrokes {
  clear: left;
  float: left;
  border: none;
  margin: 0;
  padding: 0;
  background: #000000;
  width: 100%;
}

#scrubber {
  border: none;
  margin: 0;
  padding: 0;
  width: 100%;
}

.blocklyText, .blocklyHtmlInput, .blocklyTreeLabel {
  font-family: 'Kanit', sans-serif !important;
}

.blocklyTreeLabel {
  font-size: 24px !important;
}

.blocklyTreeRow {
  height: 28px !important;
  margin-top: 5px !important;
}

.quick-button {
  float: left;
  margin-top: 10px;
}

#settings-button {
  float: right;
}

#toolbar > .quick-button:first-child {
  margin-left: 10px;
}

#settings-button, #close-settings-button {
  margin-right: 10px;
}

.quick-button img {
  width: 50px;
  height: 50px;
  padding: 5px;
  transition-property: transform; 
  transition-duration: 200ms;
  transition-timing-function: ease-in-out;
}

.quick-button img:hover {
  transform: scale(1.2);
}

.quick-button img:active {
  transform: rotate(20deg) scale(0.9);
}

/*
I tried not having a div wrapper around the settings ul, but the overflow: auto
on the ul cut off the absolutely positioned X box.
*/
#right {
  overflow: none;
  display: none;
  width: 300px;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
}

/*
If the gear menu gets smaller, we don't want its container to shrink in size,
because that size can be set by the user and shouldn't be volatile. So, we use
absolute positioning for the content. Yet, if the content grows to exceed the
container because the font grows, we want to expand the container. That's done
in JavaScript.
*/
ul#settings {
  font-size: 20pt;
  position: absolute;
  overflow: auto;
  right: 0;
  top: 0;
  bottom: 0;
  list-style: none;
  padding-left: 0;
  margin: 0;
}

#close-settings-button {
  display: none;
  position: absolute;
  left: 0;
  top: 0;
  transform: translate(-60px, 0);
}

ul#settings > li > .panel-section-content {
  display: none;
}

ul#settings > li {
  font-family: sans-serif;
  display: inline-block;
  width: 100%;
  margin: 0;
  border-bottom-style: solid;
  border-bottom-width: 1px;
}

ul#settings > li > .panel-section-label {
  /*
   Users were wanting to click on the space after the label to expand the
   section. So it got upgraded from inline to block.
   */
  display: block;

  text-transform: uppercase;
}

ul#settings > li > .panel-section-label:before {
  content: '\25b8';
  padding: 10px 0.3em;
  display: inline-block;
}

ul#settings > li > .open-panel-section-label {
  font-style: italic;
}

ul#settings > li > .open-panel-section-label:before {
  content: '\25be';
  font-style: normal; /* The root is italicized. Not so this. */
}

ul#settings > li > .panel-section-content {
  margin: 10px;
  margin-top: 0;
}

#toolbar {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  display: none;
}

.menu-link {
  text-decoration: none;
}

.menu-link.clickable {
  pointer-events: initial;
}

.menu-link.unclickable {
  pointer-events: none;
}

#gear-in-console {
  transform: translate(0, 20%);
}

#settings input[type="button"], #settings input[type="text"] {
  margin: 5px auto;
}

#settings input[type="checkbox"] {
  background: none;
  color: black;
}

.pretty > input + label > i:before {
  left: 1px;
  top: 1px;
}

#settings .pretty i {
  color: black;
}

.panel-section-content > div {
  margin-top: 4px;
  margin-bottom: 4px;
}

#tutorial {
  width: 100%;
  height: 1000px;
  border: none;
}

fieldset {
  border: 1px solid #666666;
  margin-top: 5px;
  margin-bottom: 10px;
}

.panel-section-content > div.group {
  margin-top: 10px;
  margin-bottom: 10px;
}

#slider-popup {
  position: absolute;
  z-index: 9999999;
}
