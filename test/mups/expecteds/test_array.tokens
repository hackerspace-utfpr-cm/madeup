1(0-0) ID: a
1(2-2) ASSIGN: =
1(4-4) LEFT_CURLY_BRACE: {
1(5-5) INTEGER: 1
1(6-6) COMMA: ,
1(8-8) INTEGER: 2
1(9-9) COMMA: ,
1(11-13) INTEGER: -10
1(14-14) RIGHT_CURLY_BRACE: }
1(15-15) NEWLINE: \n
2(16-16) ID: b
2(18-18) ASSIGN: =
2(20-20) LEFT_CURLY_BRACE: {
2(21-23) INTEGER: 100
2(24-24) COMMA: ,
2(26-28) INTEGER: 300
2(29-29) COMMA: ,
2(31-33) INTEGER: 500
2(34-34) RIGHT_CURLY_BRACE: }
2(35-35) NEWLINE: \n
3(36-36) NEWLINE: \n
4(37-39) ID: sum
4(41-41) ASSIGN: =
4(43-43) ID: a
4(45-45) PLUS: +
4(47-47) ID: b
4(48-48) NEWLINE: \n
5(49-53) ID: debug
5(55-57) ID: sum
5(59-60) EQUAL_TO: ==
5(62-62) LEFT_CURLY_BRACE: {
5(63-65) INTEGER: 101
5(66-66) COMMA: ,
5(68-70) INTEGER: 302
5(71-71) COMMA: ,
5(73-75) INTEGER: 490
5(76-76) RIGHT_CURLY_BRACE: }
5(77-77) NEWLINE: \n
6(78-78) NEWLINE: \n
7(79-82) ID: diff
7(84-84) ASSIGN: =
7(86-86) ID: a
7(88-88) MINUS: -
7(90-90) ID: b
7(91-91) NEWLINE: \n
8(92-96) ID: debug
8(98-101) ID: diff
8(103-104) EQUAL_TO: ==
8(106-106) LEFT_CURLY_BRACE: {
8(107-109) INTEGER: -99
8(110-110) COMMA: ,
8(112-115) INTEGER: -298
8(116-116) COMMA: ,
8(118-121) INTEGER: -510
8(122-122) RIGHT_CURLY_BRACE: }
8(123-123) NEWLINE: \n
9(124-124) NEWLINE: \n
10(125-131) ID: product
10(133-133) ASSIGN: =
10(135-135) ID: a
10(137-137) TIMES: *
10(139-139) ID: b
10(140-140) NEWLINE: \n
11(141-145) ID: debug
11(147-153) ID: product
11(155-156) EQUAL_TO: ==
11(158-158) LEFT_CURLY_BRACE: {
11(159-161) INTEGER: 100
11(162-162) COMMA: ,
11(164-166) INTEGER: 600
11(167-167) COMMA: ,
11(169-173) INTEGER: -5000
11(174-174) RIGHT_CURLY_BRACE: }
11(175-175) NEWLINE: \n
12(176-176) NEWLINE: \n
13(177-177) ID: p
13(179-179) ASSIGN: =
13(181-181) ID: a
13(183-183) TIMES: *
13(185-185) INTEGER: 7
13(186-186) NEWLINE: \n
14(187-191) ID: debug
14(193-193) ID: p
14(195-196) EQUAL_TO: ==
14(198-198) LEFT_CURLY_BRACE: {
14(199-199) INTEGER: 7
14(200-200) COMMA: ,
14(202-203) INTEGER: 14
14(204-204) COMMA: ,
14(206-208) INTEGER: -70
14(209-209) RIGHT_CURLY_BRACE: }
14(210-210) NEWLINE: \n
15(211-211) NEWLINE: \n
16(212-212) ID: p
16(214-214) ASSIGN: =
16(216-216) INTEGER: 7
16(218-218) TIMES: *
16(220-220) ID: a
16(221-221) NEWLINE: \n
17(222-226) ID: debug
17(228-228) ID: p
17(230-231) EQUAL_TO: ==
17(233-233) LEFT_CURLY_BRACE: {
17(234-234) INTEGER: 7
17(235-235) COMMA: ,
17(237-238) INTEGER: 14
17(239-239) COMMA: ,
17(241-243) INTEGER: -70
17(244-244) RIGHT_CURLY_BRACE: }
17(245-245) NEWLINE: \n
18(246-246) NEWLINE: \n
19(247-247) ID: q
19(249-249) ASSIGN: =
19(251-251) ID: b
19(253-253) DIVIDE: /
19(255-255) ID: a
19(256-256) NEWLINE: \n
20(257-261) ID: debug
20(263-263) ID: q
20(265-266) EQUAL_TO: ==
20(268-268) LEFT_CURLY_BRACE: {
20(269-271) INTEGER: 100
20(272-272) COMMA: ,
20(274-276) INTEGER: 150
20(277-277) COMMA: ,
20(279-281) INTEGER: -50
20(282-282) RIGHT_CURLY_BRACE: }
20(283-283) NEWLINE: \n
21(284-284) NEWLINE: \n
22(285-285) ID: q
22(287-287) ASSIGN: =
22(289-289) LEFT_CURLY_BRACE: {
22(290-292) INTEGER: 100
22(293-293) COMMA: ,
22(295-296) INTEGER: 80
22(297-297) COMMA: ,
22(299-300) INTEGER: 40
22(301-301) COMMA: ,
22(303-304) INTEGER: 20
22(305-305) RIGHT_CURLY_BRACE: }
22(307-307) DIVIDE: /
22(309-310) INTEGER: 20
22(311-311) NEWLINE: \n
23(312-316) ID: debug
23(318-318) ID: q
23(320-321) EQUAL_TO: ==
23(323-323) LEFT_CURLY_BRACE: {
23(324-324) INTEGER: 5
23(325-325) COMMA: ,
23(327-327) INTEGER: 4
23(328-328) COMMA: ,
23(330-330) INTEGER: 2
23(331-331) COMMA: ,
23(333-333) INTEGER: 1
23(334-334) RIGHT_CURLY_BRACE: }
23(335-335) NEWLINE: \n
24(336-336) NEWLINE: \n
25(337-338) ID: ns
25(340-340) ASSIGN: =
25(342-342) PIPE: |
25(343-343) LEFT_CURLY_BRACE: {
25(344-346) INTEGER: -10
25(347-347) COMMA: ,
25(349-349) INTEGER: 0
25(350-350) COMMA: ,
25(352-352) INTEGER: 9
25(353-353) COMMA: ,
25(355-356) INTEGER: -3
25(357-357) RIGHT_CURLY_BRACE: }
25(358-358) PIPE: |
25(359-359) NEWLINE: \n
26(360-364) ID: debug
26(366-367) ID: ns
26(369-370) EQUAL_TO: ==
26(372-372) LEFT_CURLY_BRACE: {
26(373-374) INTEGER: 10
26(375-375) COMMA: ,
26(377-377) INTEGER: 0
26(378-378) COMMA: ,
26(380-380) INTEGER: 9
26(381-381) COMMA: ,
26(383-383) INTEGER: 3
26(384-384) RIGHT_CURLY_BRACE: }
26(385-385) NEWLINE: \n
27(386-386) NEWLINE: \n
28(387-389) ID: tfs
28(391-391) ASSIGN: =
28(393-395) NOT: not
28(397-397) LEFT_CURLY_BRACE: {
28(398-401) TRUE: true
28(402-402) COMMA: ,
28(404-408) FALSE: false
28(409-409) COMMA: ,
28(411-415) FALSE: false
28(416-416) COMMA: ,
28(418-421) TRUE: true
28(422-422) COMMA: ,
28(424-428) FALSE: false
28(429-429) RIGHT_CURLY_BRACE: }
28(430-430) NEWLINE: \n
29(431-435) ID: debug
29(437-439) ID: tfs
29(441-442) EQUAL_TO: ==
29(444-444) LEFT_CURLY_BRACE: {
29(445-449) FALSE: false
29(450-450) COMMA: ,
29(452-455) TRUE: true
29(456-456) COMMA: ,
29(458-461) TRUE: true
29(462-462) COMMA: ,
29(464-468) FALSE: false
29(469-469) COMMA: ,
29(471-474) TRUE: true
29(475-475) RIGHT_CURLY_BRACE: }
29(476-476) NEWLINE: \n
30(477-477) NEWLINE: \n
31(478-479) ID: ns
31(481-481) ASSIGN: =
31(483-483) LEFT_CURLY_BRACE: {
31(484-485) INTEGER: -5
31(486-486) COMMA: ,
31(488-488) INTEGER: 0
31(489-489) COMMA: ,
31(491-493) INTEGER: -10
31(494-494) COMMA: ,
31(496-496) INTEGER: 8
31(497-497) COMMA: ,
31(499-499) INTEGER: 3
31(500-500) RIGHT_CURLY_BRACE: }
31(501-501) NEWLINE: \n
32(502-506) ID: debug
32(508-508) LEFT_PARENTHESIS: (
32(509-509) MINUS: -
32(510-511) ID: ns
32(512-512) RIGHT_PARENTHESIS: )
32(514-515) EQUAL_TO: ==
32(517-517) LEFT_CURLY_BRACE: {
32(518-518) INTEGER: 5
32(519-519) COMMA: ,
32(521-521) INTEGER: 0
32(522-522) COMMA: ,
32(524-525) INTEGER: 10
32(526-526) COMMA: ,
32(528-529) INTEGER: -8
32(530-530) COMMA: ,
32(532-533) INTEGER: -3
32(534-534) RIGHT_CURLY_BRACE: }
32(535-535) NEWLINE: \n
33(536-536) NEWLINE: \n
34(537-538) ID: t1
34(540-540) ASSIGN: =
34(542-542) LEFT_CURLY_BRACE: {
34(543-546) TRUE: true
34(547-547) COMMA: ,
34(549-552) TRUE: true
34(553-553) COMMA: ,
34(555-559) FALSE: false
34(560-560) COMMA: ,
34(562-566) FALSE: false
34(567-567) RIGHT_CURLY_BRACE: }
34(568-568) NEWLINE: \n
35(569-570) ID: t2
35(572-572) ASSIGN: =
35(574-574) LEFT_CURLY_BRACE: {
35(575-578) TRUE: true
35(579-579) COMMA: ,
35(581-585) FALSE: false
35(586-586) COMMA: ,
35(588-591) TRUE: true
35(592-592) COMMA: ,
35(594-598) FALSE: false
35(599-599) RIGHT_CURLY_BRACE: }
35(600-600) NEWLINE: \n
36(601-605) ID: debug
36(607-607) LEFT_PARENTHESIS: (
36(608-609) ID: t1
36(611-613) AND: and
36(615-616) ID: t2
36(617-617) RIGHT_PARENTHESIS: )
36(619-620) EQUAL_TO: ==
36(622-622) LEFT_CURLY_BRACE: {
36(623-626) TRUE: true
36(627-627) COMMA: ,
36(629-633) FALSE: false
36(634-634) COMMA: ,
36(636-640) FALSE: false
36(641-641) COMMA: ,
36(643-647) FALSE: false
36(648-648) RIGHT_CURLY_BRACE: }
36(649-649) NEWLINE: \n
37(650-654) ID: debug
37(656-656) LEFT_PARENTHESIS: (
37(657-658) ID: t1
37(660-661) OR: or
37(663-664) ID: t2
37(665-665) RIGHT_PARENTHESIS: )
37(667-668) EQUAL_TO: ==
37(670-670) LEFT_CURLY_BRACE: {
37(671-674) TRUE: true
37(675-675) COMMA: ,
37(677-680) TRUE: true
37(681-681) COMMA: ,
37(683-686) TRUE: true
37(687-687) COMMA: ,
37(689-693) FALSE: false
37(694-694) RIGHT_CURLY_BRACE: }
37(695-695) NEWLINE: \n
38(696-696) NEWLINE: \n
39(697-697) ID: a
39(699-699) ASSIGN: =
39(701-701) LEFT_CURLY_BRACE: {
39(702-703) INTEGER: 90
39(704-704) COMMA: ,
39(706-708) INTEGER: -10
39(709-709) COMMA: ,
39(711-713) INTEGER: 100
39(714-714) COMMA: ,
39(716-718) INTEGER: 110
39(719-719) COMMA: ,
39(721-724) INTEGER: 1000
39(725-725) RIGHT_CURLY_BRACE: }
39(726-726) NEWLINE: \n
40(727-731) ID: debug
40(733-733) LEFT_PARENTHESIS: (
40(734-734) ID: a
40(736-736) LESS_THAN: <
40(738-740) INTEGER: 100
40(741-741) RIGHT_PARENTHESIS: )
40(743-744) EQUAL_TO: ==
40(746-746) LEFT_CURLY_BRACE: {
40(747-750) TRUE: true
40(751-751) COMMA: ,
40(753-756) TRUE: true
40(757-757) COMMA: ,
40(759-763) FALSE: false
40(764-764) COMMA: ,
40(766-770) FALSE: false
40(771-771) COMMA: ,
40(773-777) FALSE: false
40(778-778) RIGHT_CURLY_BRACE: }
40(779-779) NEWLINE: \n
41(780-780) NEWLINE: \n
42(781-781) ID: a
42(783-783) ASSIGN: =
42(785-785) LEFT_CURLY_BRACE: {
42(786-786) INTEGER: 1
42(787-787) COMMA: ,
42(789-789) INTEGER: 2
42(790-790) COMMA: ,
42(792-792) INTEGER: 3
42(793-793) RIGHT_CURLY_BRACE: }
42(794-794) NEWLINE: \n
43(795-795) ID: q
43(797-797) ASSIGN: =
43(799-799) ID: a
43(801-802) REAL_DIVIDE: //
43(804-804) INTEGER: 2
43(805-805) NEWLINE: \n
44(806-810) ID: debug
44(812-814) ID: all
44(816-816) LEFT_PARENTHESIS: (
44(817-817) PIPE: |
44(818-818) ID: q
44(820-820) MINUS: -
44(822-822) LEFT_CURLY_BRACE: {
44(823-825) REAL: 0.5
44(826-826) COMMA: ,
44(828-830) REAL: 1.0
44(831-831) COMMA: ,
44(833-835) REAL: 1.5
44(836-836) RIGHT_CURLY_BRACE: }
44(837-837) PIPE: |
44(839-839) LESS_THAN: <
44(841-845) REAL: 0.001
44(846-846) RIGHT_PARENTHESIS: )
44(847-847) NEWLINE: \n
45(848-848) NEWLINE: \n
46(849-849) ID: a
46(851-851) ASSIGN: =
46(853-853) LEFT_CURLY_BRACE: {
46(854-854) INTEGER: 0
46(855-855) COMMA: ,
46(857-857) INTEGER: 1
46(858-858) COMMA: ,
46(860-860) INTEGER: 2
46(861-861) COMMA: ,
46(863-863) INTEGER: 3
46(864-864) COMMA: ,
46(866-866) INTEGER: 4
46(867-867) COMMA: ,
46(869-869) INTEGER: 5
46(870-870) COMMA: ,
46(872-872) INTEGER: 6
46(873-873) COMMA: ,
46(875-875) INTEGER: 7
46(876-876) RIGHT_CURLY_BRACE: }
46(877-877) NEWLINE: \n
47(878-878) ID: r
47(880-880) ASSIGN: =
47(882-882) ID: a
47(884-884) REMAINDER: %
47(886-886) INTEGER: 3
47(887-887) NEWLINE: \n
48(888-892) ID: debug
48(894-894) ID: r
48(896-897) EQUAL_TO: ==
48(899-899) LEFT_CURLY_BRACE: {
48(900-900) INTEGER: 0
48(901-901) COMMA: ,
48(903-903) INTEGER: 1
48(904-904) COMMA: ,
48(906-906) INTEGER: 2
48(907-907) COMMA: ,
48(909-909) INTEGER: 0
48(910-910) COMMA: ,
48(912-912) INTEGER: 1
48(913-913) COMMA: ,
48(915-915) INTEGER: 2
48(916-916) COMMA: ,
48(918-918) INTEGER: 0
48(919-919) COMMA: ,
48(921-921) INTEGER: 1
48(922-922) RIGHT_CURLY_BRACE: }
48(923-923) NEWLINE: \n
49(924-924) NEWLINE: \n
50(925-925) ID: a
50(927-927) ASSIGN: =
50(929-929) LEFT_CURLY_BRACE: {
50(930-931) INTEGER: 10
50(932-932) COMMA: ,
50(934-935) INTEGER: 20
50(936-936) COMMA: ,
50(938-939) INTEGER: 24
50(940-940) COMMA: ,
50(942-943) INTEGER: 19
50(944-944) COMMA: ,
50(946-947) INTEGER: 15
50(948-948) RIGHT_CURLY_BRACE: }
50(949-949) NEWLINE: \n
51(950-950) ID: b
51(952-952) ASSIGN: =
51(954-954) LEFT_CURLY_BRACE: {
51(955-955) INTEGER: 3
51(956-956) COMMA: ,
51(958-958) INTEGER: 2
51(959-959) COMMA: ,
51(961-961) INTEGER: 7
51(962-962) COMMA: ,
51(964-965) INTEGER: 10
51(966-966) COMMA: ,
51(968-968) INTEGER: 9
51(969-969) RIGHT_CURLY_BRACE: }
51(970-970) NEWLINE: \n
52(971-971) ID: r
52(973-973) ASSIGN: =
52(975-975) ID: a
52(977-977) REMAINDER: %
52(979-979) ID: b
52(980-980) NEWLINE: \n
53(981-985) ID: debug
53(987-987) ID: r
53(989-990) EQUAL_TO: ==
53(992-992) LEFT_CURLY_BRACE: {
53(993-993) INTEGER: 1
53(994-994) COMMA: ,
53(996-996) INTEGER: 0
53(997-997) COMMA: ,
53(999-999) INTEGER: 3
53(1000-1000) COMMA: ,
53(1002-1002) INTEGER: 9
53(1003-1003) COMMA: ,
53(1005-1005) INTEGER: 6
53(1006-1006) RIGHT_CURLY_BRACE: }
53(1007-1007) NEWLINE: \n
54(1008-1008) NEWLINE: \n
55(1009-1009) ID: a
55(1011-1011) ASSIGN: =
55(1013-1013) LEFT_CURLY_BRACE: {
55(1014-1014) INTEGER: 1
55(1015-1015) COMMA: ,
55(1017-1017) INTEGER: 2
55(1018-1018) COMMA: ,
55(1020-1020) INTEGER: 3
55(1021-1021) RIGHT_CURLY_BRACE: }
55(1022-1022) NEWLINE: \n
56(1023-1023) ID: b
56(1025-1025) ASSIGN: =
56(1027-1027) LEFT_CURLY_BRACE: {
56(1028-1028) INTEGER: 8
56(1029-1029) COMMA: ,
56(1031-1031) INTEGER: 6
56(1032-1032) COMMA: ,
56(1034-1034) INTEGER: 2
56(1035-1035) RIGHT_CURLY_BRACE: }
56(1036-1036) NEWLINE: \n
57(1037-1037) ID: p
57(1039-1039) ASSIGN: =
57(1041-1041) ID: a
57(1043-1043) CIRCUMFLEX: ^
57(1045-1045) ID: b
57(1046-1046) NEWLINE: \n
58(1047-1051) ID: debug
58(1053-1053) ID: p
58(1055-1056) EQUAL_TO: ==
58(1058-1058) LEFT_CURLY_BRACE: {
58(1059-1059) INTEGER: 1
58(1060-1060) COMMA: ,
58(1062-1063) INTEGER: 64
58(1064-1064) COMMA: ,
58(1066-1066) INTEGER: 9
58(1067-1067) RIGHT_CURLY_BRACE: }
58(1068-1068) NEWLINE: \n
59(1069-1069) NEWLINE: \n
60(1070-1070) ID: x
60(1072-1072) ASSIGN: =
60(1074-1074) LEFT_CURLY_BRACE: {
60(1075-1078) INTEGER: 1000
60(1079-1079) COMMA: ,
60(1081-1082) INTEGER: 64
60(1083-1083) COMMA: ,
60(1085-1086) INTEGER: 81
60(1087-1087) RIGHT_CURLY_BRACE: }
60(1088-1088) NEWLINE: \n
61(1089-1092) ID: base
61(1094-1094) ASSIGN: =
61(1096-1096) LEFT_CURLY_BRACE: {
61(1097-1098) INTEGER: 10
61(1099-1099) COMMA: ,
61(1101-1101) INTEGER: 2
61(1102-1102) COMMA: ,
61(1104-1104) INTEGER: 3
61(1105-1105) RIGHT_CURLY_BRACE: }
61(1106-1106) NEWLINE: \n
62(1107-1107) ID: l
62(1109-1109) ASSIGN: =
62(1111-1113) ID: log
62(1115-1118) ID: base
62(1119-1119) COMMA: ,
62(1121-1121) ID: x
62(1122-1122) NEWLINE: \n
63(1123-1127) ID: debug
63(1129-1131) ID: all
63(1133-1133) LEFT_PARENTHESIS: (
63(1134-1134) PIPE: |
63(1135-1135) ID: l
63(1137-1137) MINUS: -
63(1139-1139) LEFT_CURLY_BRACE: {
63(1140-1140) INTEGER: 3
63(1141-1141) COMMA: ,
63(1143-1143) INTEGER: 6
63(1144-1144) COMMA: ,
63(1146-1146) INTEGER: 4
63(1147-1147) RIGHT_CURLY_BRACE: }
63(1148-1148) PIPE: |
63(1150-1150) LESS_THAN: <
63(1152-1156) REAL: 0.001
63(1157-1157) RIGHT_PARENTHESIS: )
63(1158-1158) NEWLINE: \n
64(1159-1159) NEWLINE: \n
65(1160-1164) ID: debug
65(1166-1168) ID: all
65(1170-1170) LEFT_CURLY_BRACE: {
65(1171-1174) TRUE: true
65(1175-1175) COMMA: ,
65(1177-1180) TRUE: true
65(1181-1181) COMMA: ,
65(1183-1186) TRUE: true
65(1187-1187) RIGHT_CURLY_BRACE: }
65(1188-1188) NEWLINE: \n
66(1189-1193) ID: debug
66(1195-1197) ID: all
66(1199-1199) LEFT_CURLY_BRACE: {
66(1200-1203) TRUE: true
66(1204-1204) RIGHT_CURLY_BRACE: }
66(1205-1205) NEWLINE: \n
67(1206-1210) ID: debug
67(1212-1214) NOT: not
67(1216-1218) ID: all
67(1220-1220) LEFT_CURLY_BRACE: {
67(1221-1225) FALSE: false
67(1226-1226) RIGHT_CURLY_BRACE: }
67(1227-1227) NEWLINE: \n
68(1228-1232) ID: debug
68(1234-1236) NOT: not
68(1238-1240) ID: all
68(1242-1242) LEFT_CURLY_BRACE: {
68(1243-1247) FALSE: false
68(1248-1248) COMMA: ,
68(1250-1253) TRUE: true
68(1254-1254) COMMA: ,
68(1256-1259) TRUE: true
68(1260-1260) RIGHT_CURLY_BRACE: }
68(1261-1261) NEWLINE: \n
69(1262-1266) ID: debug
69(1268-1270) NOT: not
69(1272-1274) ID: all
69(1276-1276) LEFT_CURLY_BRACE: {
69(1277-1281) FALSE: false
69(1282-1282) COMMA: ,
69(1284-1288) FALSE: false
69(1289-1289) RIGHT_CURLY_BRACE: }
69(1290-1290) NEWLINE: \n
70(1291-1291) END_OF_FILE: END OF FILE
